#### Error #####
BadRequestError:
  type: object
  properties:
    errorCode:
      type: string
      example: "A100"
    message:
      type: string
      example: "リクエストパラメータが不正です。"
  required:
    - errorCode
    - message

NotFoundError:
  type: object
  properties:
    errorCode:
      type: string
      example: "A150"
    message:
      type: string
      example: "XXXIDが見つかりませんでした。"
  required:
    - errorCode
    - message

NonAdminError:
  type: object
  properties:
    errorCode:
      type: string
      example: "A160"
    message:
      type: string
      example: "管理者権限がありません。"
  required:
    - errorCode
    - message

UnauthorizedError:
  type: object
  properties:
    errorCode:
      type: string
      example: "A170"
    message:
      type: string
      example: "アクセストークンが不正です。"
  required:
    - errorCode
    - message

InternalServerError:
  type: object
  properties:
    errorCode:
      type: string
      example: "A200"
    message:
      type: string
      example: "サーバで処理ができませんでした。"
  required:
    - errorCode
    - message

##### ユーザー #####
AuthResponse:
  description: "認証 Response"
  type: object
  required:
    - idToken
  properties:
    id:
      type: string
      example: "pbuser"
    userName:
      type: string
      example: "太郎"
    email:
      type: string
      example: "pbuser@example.com"
    idToken:
      type: string
      example: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjRlOWRmNWE0ZjI4YWQwMjUwNjRkNjY1NTNiY2I5YjMzOTY4NWVmOTQiLCJ0eXAiOiJKV1QifQ"
    registered:
      type: boolean
      example: true
    refreshToken:
      type: string
      example: "AGEhc0CP3FyqIGYzvXNV"
    expiresIn:
      type: string
      example: "3600"

AuthUserIdReq:
  description: "UserIdでログイン認証 Request"
  type: object
  required:
    - userId
    - password
  properties:
    userId:
      description: "ユーザID"
      type: string
      example: "pbuser"
    password:
      description: "パスワード"
      type: string
      example: "password"

UserItems:
  type: object
  properties:
    items:
      description: "ユーザのデータリスト"
      type: array
      items:
        $ref: "#/components/schemas/User"
    count:
      description: "データのサイズ"
      type: integer
      format: int32
      example: 1

User:
  description: "ユーザ"
  type: object
  required:
    - userId
    - userName
  properties:
    userId:
      description: "ユーザID"
      type: string
      example: "pbuser"
    userName:
      description: "ユーザ名"
      type: string
      example: "太郎"
    email:
      description: "メールアドレス"
      type: string
      example: "pbuser@example.com"

UserReq:
  description: "ユーザ"
  type: object
  required:
    - email
    - userName
  properties:
    email:
      description: "メールアドレス"
      type: string
      example: "pbuser@example.com"
    userName:
      description: "ユーザ名"
      type: string
      example: "太郎"

UserPut:
  description: "ユーザ"
  type: object
  required:
    - userName
    - email
  properties:
    userName:
      description: "ユーザ名"
      type: string
      example: "太郎"
    email:
      description: "メールアドレス"
      type: string
      example: "pbuser@example.com"

##### プロジェクト #####
HolidayItems:
  type: object
  properties:
    items:
      description: "カレンダーのデータリスト"
      type: array
      items:
        $ref: "#/components/schemas/Holiday"
    count:
      description: "データのサイズ"
      type: integer
      format: int32
      example: 1

ProjectItems:
  type: object
  properties:
    items:
      description: "プロジェクトのデータリスト"
      type: array
      items:
        $ref: "#/components/schemas/Project"
    count:
      description: "データのサイズ"
      type: integer
      format: int32
      example: 1

Project:
  description: "プロジェクト"
  type: object
  required:
    - projectId
    - projectName
    - projectOperator
    - projectStartDate
    - projectEndDate
    - updateAt
  properties:
    projectId:
      description: "プロジェクトID"
      type: string
      example: "project001"
    projectName:
      description: "プロジェクト名"
      type: string
      example: "〇〇プロジェクト"
    projectOperator:
      description: "プロジェクト担当者"
      type: string
      example: "太郎"
    projectStartDate:
      description: "開始年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-04-01"
    projectEndDate:
      description: "終了年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-12-25"
    updateAt:
      description: "変更時間 (Epoch Time)"
      type: number
      example: 1627516800000

ProjectReq:
  description: "プロジェクト"
  type: object
  required:
    - projectName
    - projectOperator
    - projectStartDate
    - projectEndDate
  properties:
    projectName:
      description: "プロジェクト名"
      type: string
      example: "〇〇プロジェクト"
    projectOperator:
      description: "プロジェクト担当者"
      type: string
      example: "太郎"
    projectStartDate:
      description: "開始年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-04-01"
    projectEndDate:
      description: "終了年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-12-25"

ProjectPutReq:
  description: "プロジェクト"
  type: object
  required:
    - projectName
    - projectOperator
    - projectStartDate
    - projectEndDate
    - updateAt
  properties:
    projectName:
      description: "プロジェクト名"
      type: string
      example: "〇〇プロジェクト"
    projectOperator:
      description: "プロジェクト担当者"
      type: string
      example: "太郎"
    projectStartDate:
      description: "開始年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-04-01"
    projectEndDate:
      description: "終了年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-12-25"
    updateAt:
      description: "変更時間 (Epoch Time)"
      type: number
      example: 1627516800000

Holiday:
  description: "カレンダー"
  type: object
  required:
    - holidayDate
    - holidayName
    - updateAt
  properties:
    holidayDate:
      description: "年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-10-31"
    holidayName:
      description: "休日"
      type: string
      example: "〇〇の日"
    updateAt:
      description: "変更時間 (Epoch Time)"
      type: number
      example: 1627516800000

HolidayReq:
  description: "カレンダー"
  type: object
  required:
    - holidayDate
    - holidayName
  properties:
    holidayDate:
      description: "年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-10-31"
    holidayName:
      description: "休日"
      type: string
      example: "〇〇の日"

HolidayPutReq:
  description: "カレンダー"
  type: object
  required:
    - holidayDate
    - holidayName
    - updateAt
  properties:
    holidayDate:
      description: "年月日"
      type: string
      format: date
      pattern: "YYYY-MM-DD"
      example: "2022-10-31"
    holidayName:
      description: "休日"
      type: string
      example: "〇〇の日"
    updateAt:
      description: "変更時間 (Epoch Time)"
      type: number
      example: 1627516800000
